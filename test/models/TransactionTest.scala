package models

import java.io.{ByteArrayInputStream, ByteArrayOutputStream}

import org.scalatest.FlatSpec
import scodec.bits.ByteVector

class TransactionTest extends FlatSpec {

  import HashHelper._

  behavior of "Transaction"

  val txHex =
    "0100000001813f79011acb80925dfe69b3def355fe914bd1d96a3f5f71bf8303c6a989c7d1000000006b483045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed01210349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278afeffffff02a135ef01000000001976a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac99c39800000000001976a9141c4bc762dd5423e332166702cb75f40df79fea1288ac19430600"

  val tx: Transaction = Transaction.parse(txHex)
  val txId = tx.txId.toHex
  it should "parse version and locktime" in {
    assert(tx.version == 1)
    assert(tx.locktime == 410393)
  }

  it should "parse inputs" in {
    assert(tx.txIn.length == 1)
    val want =
      "d1c789a9c60383bf715f3f6ad9d14b91fe55f3deb369fe5d9280cb1a01793f81"
    assert(tx.txIn.head.txId.toHex == want)
    assert(tx.txIn.head.prevIdx == 0)
    assert(tx.txIn.head.sequence == 4294967294L)
    val scriptSig =
      "483045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed01210349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278a"
    assert(tx.txIn.head.scriptSig.toHex == scriptSig)
  }

  it should "parse outputs" in {

    assert(tx.txOut.length == 2)
    val want = 32454049
    assert(tx.txOut.head.amount == want)
    val want1 =
      "76a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac"
    val out = new ByteArrayOutputStream()
    writeScript(tx.txOut.head.scriptPubKey.toArray, out)
    val result = ByteVector(out.toByteArray)
    assert(result.toHex.drop(2) == want1)
    val want2 = 10011545
    assert(tx.txOut(1).amount == want2)
    val want3 =
      "76a9141c4bc762dd5423e332166702cb75f40df79fea1288ac"

    assert(tx.txOut(1).scriptPubKey.toHex == want3)

  }

  it should "der signature" in {

    val want =
      "3045022100ed81ff192e75a3fd2304004dcadb746fa5e24c5031ccfcf21320b0277457c98f02207a986d955c6e0cb35d446a89d3f56100f4d7f67801c31967743a9c8e10615bed"

    val der = tx.txIn.head.derSignature()
    val hashType = tx.txIn.head.hashType()

    assert(der.toHex == want)
    assert(hashType == SIGHASH_ALL)

  }

  it should "sec pub key" in {

    val want =
      "0349fc4e631e3624a545de3f89f5d8684c7b8138bd94bdd531d2e213bf016b278a"
    assert(
      tx.txIn.head
        .secPubKey()
        .toHex == want
    )

  }

  it should "serialize" in {

    val ser = Transaction.serialize(tx)
    assert(ser.toHex == txHex)
  }

  it should "sign input" in {

    assert(tx.txOut.length == 2)
    val want = 32454049
    assert(tx.txOut.head.amount == want)
    val want1 = "76a914bc3b654dca7e56b04dca18f2566cdaf02e8d9ada88ac"

    assert(tx.txOut.head.scriptPubKey.toHex == want1)
    val want2 = 10011545
    assert(tx.txOut(1).amount == want2)
    val want3 = "76a9141c4bc762dd5423e332166702cb75f40df79fea1288ac"
    assert(tx.txOut(1).scriptPubKey.toHex == want3)

  }

  // fixme: issues w/ p2sh
//  it should "test tx" in {
//
//    val hex =
//      "0100000000010a2dbdab71b411beeadbdac52904cea37e6442ab5edf100189ac70bd73fa519d8501000000232200209ef7bdbd78fad9b17e4be726eeb271c55459bf593151e108be61df0640230bf6ffffffff3da0ec2376e6bba79515cc17c1081fc653a6762a864f65a7cd38ae3530b891e0070000002322002029b6bdd0c39cbabc746fcd3ac56cbad986da7b9902ed1ee58da71233fdf72bacffffffff08e8c9b7631c6869027e31be7ad691ff2742963161ee3e052bfae7628b254cf80100000023220020e47e95d5f488eeb04d8df0ff7eb3c891494c37b90c43b97d4eb6362bca879312ffffffffb8bec25a8663d236cd39674a2092c323b5e119e26e136cec61eb0c7c241c08f205000000232200209ca384d37d7ebe49268332ce241efe9720dc8eb3ee0751ce2afbdd06e00947c9ffffffffe47ebb64ac00fccc899a930b75582d28cc678dc298c8308542a812e1affc81ed0400000023220020abebcb0a6295f0c237cc4bfc7eb4dfd373206d442d77c7fbf50f7c09e21a843affffffff8b95255c73392bf1e6e4392260eff5bbf31cb4346b277d95ce21a48590c68a2302000000232200207cee87cbd601a0fcda44bf03e9fc7c60d3e88fab373da9600f1e01920b0cd644ffffffff0c0daa8d27e80d99382f3f43f489f4d9f32c90c3971fd537dcade795724140f60000000023220020f4d8165242664fe1c4ef37caef5755ac3c818de3f5b206db1e593832a386195fffffffff0c0daa8d27e80d99382f3f43f489f4d9f32c90c3971fd537dcade795724140f60300000023220020dc7322e091cadba0c45fb22bdbe5dba5b14af2c45c2e57a19367eb3b23572016ffffffffe47ebb64ac00fccc899a930b75582d28cc678dc298c8308542a812e1affc81ed06000000232200207475b3d1650b03b4ad0222396e01502f7cd5926a69d9e8d6161996a164324889ffffffff6acc1af0be0adad035de8277bee188f99e8ecf725beb393bcf9bc8c2ce0c584501000000232200207d1eb74dc2f0d6e24d5e381459ab177758c8b7321fe741c2a5b3afb6a3693b2effffffff158fcf24050000000017a91490cb4d2fd5c879c198926021d210f59fddcf45dd879094d200000000001976a914dde8dd51b93e4ad636c706bbeb3f877220a2020a88acfeabde00000000001976a914615b772c29519a309d5d180d43e5bda0afe3fa0788aca7ac6301000000001976a91423b98e0f1f44dbee7b30df520ce83e91f5081c9888ac0149c200000000001976a914ddbf99587bbf9b0594d084cc3d0d8216e5357be788acddd6bc01000000001976a9143c1d12a3a2b56a5bfa75eca896b466851e0f227288ac7c446911000000001976a914dfbc7d91c79bbf3dd8490d421c046687f5f44d1788ac9eadaf010000000017a91444e49b57baa8031bbb2521c962629019dea33e19877c446911000000001976a914dfbc7d91c79bbf3dd8490d421c046687f5f44d1788acd35dff060000000017a914e71abb0800afc1a275cdeb4e5b3fc09513e38f77873fcfc301000000001976a9140521e17ef83be825927a72dd05c40accd028a5cd88aca7ac63010000000017a91409e1399ef7449cea2deb6e4b98911f1730174c3787a7ac63010000000017a91409e1399ef7449cea2deb6e4b98911f1730174c3787b07af5060000000017a91490cb4d2fd5c879c198926021d210f59fddcf45dd87bfaf14060000000017a91490cb4d2fd5c879c198926021d210f59fddcf45dd87d686fe060000000017a9149137eb9c7da97bdeddab96bb6446ebc9ba2f968a875b403f020000000017a914d15446627a87886d629552e3219d77ca6e390beb8701fbbe010000000017a914217eeb63f01c8a3e334442e98b7f6d63383cf64c87f9905800000000001976a914df5141aa529bbb1e62941ca351584afd5e00488c88acba5dbb00000000001976a914173302e8196adce7f38dbe6a9e467d62bb3cc1fd88ac2f696501000000001976a91424efdf540467f060040359fd507124224927e3fa88ac0400483045022100eba9c717ea9365a4571c7589ef3a09850d0d8982e2d508dfff4663779a4c74a90220757f90793623e8e45eebb118a1aee30dad9a29e4134865f50349a9123d60106601483045022100c987202a250d6fb2b32c9e585838a85e831de3115ec07921c222eb441485a51b02202ae659b662ffbf7a19fae02691cf681869c8e953cfd8b17e8cde6d1151db267e016952210295a4d2ba23fed0314876a267554cd057ab00663cb0d12aa781cf9f138e492a692103099227586a897cb6d1aba0db11151221e8b242cd9f8495a907d8438dcd399084210284241fc0e953c39606ca2447428d7cb3c304f66bff09ad2e8d739c894f530c9753ae0400473044022025227d08e60e22df63e01a579ea344e369ce3204e88a7fc6de48b8daaef1842402202b5c4947c36f9d32efb17e4e5a57b141c6707718490889a10a60dd0c34df9bf201473044022020e54045af603cfb57f7b4a6d759461a911d1004390cfd5a16872008309d7141022070285a6392d32c7e6f6bdca6db83fe6f38f60776df27c1a5ae8e62aa0f7f388d0169522102b4bd1da477f7f6111b8f3eb5858574593bae29d9b6da4d037551a30a0f21fe1c2103d23de63656d6886cd3d7445cb2dede77f3a455baf3e6c173afb7068ad067657b2102a7d6f01955636f9b0e517695b328faedd718079a4332cd85a2c576475ebe513a53ae0400483045022100f221e4449a2381351644948f0016400cfa7623027a8105e663eede486c74dcb50220661c2065971db3aec1668646b6b619e593df532f6b7f75217fef5da9d9338e5901483045022100a45403a344078009ed69c02f14153ec44edf9e67970211e81321ca6f3c790f7302202fa17aaaaa24ab774588dc0e4885088990eb64db373e5f485294165d9826bff801695221036d31646019b76550c6098d2b501200936394038317275471da01ad42771e1ab621026185f65b99bbd7ef378e00d2380ea256f1d77662978be62af7c4c78226e3ad2e21021101c71c13364fe7fb08918ebca301edbd721882c04597655181f4741581cb2e53ae0400483045022100ea4206d9f8aff7c7c12d0a6a96eff6148929be3c1bd36668257fc1558144a8f302207f93e6dd9cc27d8b372c9f15a486eb454d293cab4e9d42dd7c33007a06154b3501473044022011f805c4cf687baef73b437dc78e49c9327f023b5668d388edb5916d07ecd7280220646a5a3db76de12a7e5fb0dda43ceb96afb701f299e2723854ce7eb5bc7ed2500169522102ed110cbfdbe9a28bfc652fe00111689b41f5d9ebf154bc3d53b73f2e15631fa52102ba98d9e20add536e4e18464acc2a1d36e82ed7e773aca74fdd5b14973227b5b221036e86e0ff9eb961f27e16386a85ec962bd73309d4860bc0d9417df0fee9b0bf7153ae040047304402207620b70ee23635f9378f27f0d1faf942db1db8839850bd4cae0f477c5526b0e102204d06307a717204c25e14149b339d47e644e9242b30e99ae75337436d722d361001483045022100ff3182d30c158c49b8bfb3b7ab9413cc72c3698c112398dead5cd5a1eae8b93402200bda1827687c8e02a5b99e467858a0f13db65deee5da6506a99203dc79e893fc01695221024fe8c437a470c0d5a675f849cf22c5f1e2e3b7a2298a28362ae92b883dd0b7862102af751ce351820a616177b73d86e12497e3691a643763abd5a8894a21b6f62fa221037001f84cc969fc8b8c5aaf4daed6e9b4fca477cbaeb711075a959085a19ebec153ae04004730440220532f7c32803c9b6353af9fd361d586195af5a75a02300d701728c17e23d4dd470220506c7b146defa9770973390309e445cd1139913510daede4c54a023f8a55c68c01473044022070499372fc87ccb7f7986d76f468f31c851a589c13a27384c9dced4bb4ee7c7a022043caff739791b14fc9efeca17b243a685c8834487ce69a2fd06d27960a9b3834016952210320bd4ec00cbc3e7f4411398cb6a2e56648c87d553cbe8f59b9d4f594c04f5a17210275c4ddf6bb03c83709f69c634d6fbb98a25554d383e7bac6dbe86c961b69b0992103360135035abeedb4087f4625005943af5215849b60a10a4887aaa9c6dfccd60953ae0400483045022100aca6101f5b2113ab0ebf4626e1d1e2cc06d45f63002005ff7a6e79c5f940f9c8022069bb6d3fc67f084c258cd2d66decc79cf5e939253269f91ccb6f686d8a629197014730440220225012837904871787975f93ae38ef42135d6733bb2a992524a1f75f3f674f1d022065d92f77f1031a875ca4bc5a13b21b52251f09db458ad3dc348887961efbde3d0169522103ef94dad957c7db9d51e94b682e9555fe4807b723556d153ee10268bbec48adee2102136a737af4fefc1b3075012aa2dc9d48308f69b2fb5a55ab920231680da52e4d2103635935d34c3bfdf73d95349bd5d62a1f60ec45c4e047e5c3c1f91017cccddb7b53ae040047304402206cecbdb86caf5e03313967196855415d75dda2166944a69ea719bbf2346ddca202201c15e6b9db22e641331f1cd6b11552071c86f9d60a0fd15e80f939207b15828201473044022042e782b76b6e44ba18a5957287c477925a544fc842dd4f666008f22c3d46a23f02207a66388637edc9155a9a9ec10246050e55f299b055041941f978822513c872420169522102f535e681d021b2252c4febe99ac0d5dc6b8bba5688b17957e7088d06c500ba472102c6257cd3382bd69098e9185122e1877becb1ecf9ef7b2c2343154772011eec4021025162640043371d7c66c5cb494361c4ff7b00b36e85e6fc65ce3c962dfd977bec53ae040047304402203abf67811db78b8f86d1d61698923a1bb9b6f70356ece5ebe581bb39bd759c0402200bf76c4b2ba997c59310d04b9db7687198047d67379c9c55bc751cd8e0a127cc0147304402203b778ed180c1d7b7f482973e86d93268e52937f851b94bc408073a7adffaa02802202702eb21a1f1c85d3e94067a47be8ff26179c2205245b2664ad31fa11a6431b10169522103590f9f6acb71483e86e4f9b0fcdd56723e71258f99f639405fada8cd6695f0be210200c3117a814482eb810ac3e0fc35b7958dfb9a6f83a92703539c6e7268bcfbb72102614086f3f0040ed1d71d36ad4158c4c786aa4420dd9d25458cca70be887998a053ae040047304402206644a2615d32a6a2762b574c420fd423eb945a8e401965a3ab86689871244cbb022077a33eac272617044664b2556dc67ef78b8806aa453819ca4820a02d0335ddfd0147304402206be51838d7cfe08160e5795e8db08d8ed110af6ff6801f0a6a4d956094dd18030220145614f2abecd05286b7dddf35e5701dd25a60516bf45a78350d7d026a5380800169522103e1495c5a714a767c4f92d72995e6ced69297b41b0b7da43077fc466a00b9b8ff21038a00adf565f0defc0058325257d99a41a2e265c4fc7f6cce82b2006356bae0b221030ffeac2b21e8c5a7584d01e58a32a8ac9b0a1a3f46fe544c09980bd1b3ecb16953ae00000000"
//    val id = "e243527b94d05063cf7d54ab781a29884be42b48cafbc0c93f4b54cb5bd87726"
//
//    val stream = new ByteArrayInputStream(ByteVector.fromValidHex(hex).toArray)
//    val tx = Transaction.parse(stream)
//
//    //val tx = fr.acinq.bitcoin.Transaction.read(stream)
//
//    assert(tx.txIn.length == 10)
//    assert(tx.txOut.length == 21)
//    assert(tx.txOut.head.amount == 86298511)
//
//  }

}
